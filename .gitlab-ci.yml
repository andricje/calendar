image: jdrouet/docker-with-buildx:stable
services:
  - docker:dind

stages:
  - Unit Tests
  - Build and Push branch
  - Build and Release latest
  - Publish release

variables:
  TEST_IMAGE: registry.richardsoper.me/richardsoper/mma-calendar:$CI_COMMIT_REF_NAME
  VERSION_IMAGE: registry.richardsoper.me/richardsoper/mma-calendar:$CI_PIPELINE_IID
  LATEST_IMAGE: registry.richardsoper.me/richardsoper/mma-calendar:latest

unittest:
  image: python:3.11
  stage: Unit Tests
  script:
    - pip3 install poetry
    - poetry install
    - poetry run python3 -u -m pytest --cov=mmacalendar --cov-report=html
  artifacts:
    paths:
      - htmlcov

build:
  before_script:
    - docker run --privileged --rm tonistiigi/binfmt --install all
  after_script:
    - docker ps | grep moby/buildkit | awk '{print $1}' | xargs docker stop | xargs docker rm
  stage: Build and Push branch
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.richardsoper.me
    - docker buildx create --use
    - docker buildx build --push --platform linux/arm64/v8,linux/amd64 --tag $TEST_IMAGE .
  except:
    - main

release:
  before_script:
    - docker run --privileged --rm tonistiigi/binfmt --install all
  after_script:
    - docker ps | grep moby/buildkit | awk '{print $1}' | xargs docker stop | xargs docker rm
  stage: Build and Release latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.richardsoper.me
    - docker buildx create --use
    - docker buildx build --push --platform linux/arm64/v8,linux/amd64 --tag $LATEST_IMAGE --tag $VERSION_IMAGE .
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == "main"

release_job:
  stage: Publish release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"
  script:
    - echo "running release_job for $TAG"
  release:
    tag_name: 'v0.$CI_PIPELINE_IID'
    description: 'v0.$CI_PIPELINE_IID'
    ref: '$CI_COMMIT_SHA'
